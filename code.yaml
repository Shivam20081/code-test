trigger:
- main

pool:
  vmImage: 'macos-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '23.x'
  displayName: 'Install Node.js'

- script: |
    npm install
  displayName: 'npm install and build'


- task: DownloadSecureFile@1
  name: downloadKeystore
  inputs:
    secureFile: 'my-upload-key.keystore'  # Name of the secure file to be downloaded
  displayName: 'Download Keystore File'

- script: |
    ls
  displayName: ' build'

- task: Gradle@3
  inputs:
    gradleWrapperFile: 'android/gradlew'
    workingDirectory: 'android/'
    options: '-PversionName=$(Build.BuildNumber) -PversionCode=$(Build.BuildId)'
    tasks: 'assembleRelease'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    gradleOptions: '-Xmx3072m'



# - task: AndroidSigning@3
#   inputs:
#     apkFiles: '**/*.apk'
#     apksignerKeystoreFile: '$(MYAPP_UPLOAD_STORE_FILE)'  # Path to downloaded file
#     apksignerKeystorePassword: '$(MYAPP_UPLOAD_STORE_PASSWORD)'
#     apksignerKeystoreAlias: '$(MYAPP_UPLOAD_KEY_ALIAS)'
#     apksignerKeyPassword: '$(MYAPP_UPLOAD_KEY_PASSWORD)'
#     zipalign: false

# - task: PublishBuildArtifacts@1
#   displayName: 'Publish APK to artifacts'
#   inputs:
#     PathtoPublish: 'android/app/build/outputs/apk/release'
#     ArtifactName: 'android'
#     publishLocation: 'Container'

# - task: AzureCLI@2
#   inputs:
#     azureSubscription: 'subscription'  # Replace with your Azure subscription service connection
#     scriptType: 'bash'
#     scriptLocation: 'inlineScript'
#     inlineScript: |
#       # Ensure the Azure CLI variables are passed correctly
#       STORAGE_ACCOUNT='your-storage-account'  # Replace with your Azure Storage Account Name
#       CONTAINER_NAME='your-container-name'    # Replace with your Azure Blob Container Name

#       # Check if the variables are set correctly
#       echo "STORAGE_ACCOUNT: $STORAGE_ACCOUNT"
#       echo "CONTAINER_NAME: $CONTAINER_NAME"

#       # Upload only .apk files to Azure Blob Storage using Azure CLI
#       az storage blob upload-batch \
#         --account-name $STORAGE_ACCOUNT \
#         --destination $CONTAINER_NAME/react-native-builds/ \
#         --source $(System.DefaultWorkingDirectory)/android/app/build/outputs/apk/release/ \
#         --pattern '*.apk'  # Upload only .apk files
#   displayName: 'Upload APK to Azure Blob Storage using Azure CLI'
