# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  vmImage: macos-latest

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '23.x'
  displayName: 'Install Node.js'

- script: |
    npm install
  displayName: 'npm install and build'

- task: Gradle@3
  inputs:
    gradleWrapperFile: 'android/gradlew'
    workingDirectory: 'android/'
    options: '-PversionName=$(Build.BuildNumber) -PversionCode=$(Build.BuildId)'
    tasks: 'assembleRelease'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    gradleOptions: '-Xmx3072m'


- task: PublishBuildArtifacts@1
  displayName: 'Publish APK to artifacts'
  inputs:
    PathtoPublish: 'android/app/build/outputs/apk/release'
    ArtifactName: 'android'
    publishLocation: 'Container'

- task: AzureCLI@2
  inputs:
    azureSubscription: 'subscription'  # Replace with your Azure subscription service connection
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      # Upload APK and App Bundle to Azure Blob Storage
      az storage blob upload-batch \
        --account-name $(STORAGE_ACCOUNT) \
        --destination $(CONTAINER_NAME)/react-native-builds/ \
        --source $(System.DefaultWorkingDirectory)/android/app/build/outputs/ \
        --pattern '*.apk'  # Upload .apk files
      az storage blob upload-batch \
        --account-name $(STORAGE_ACCOUNT) \
        --destination $(CONTAINER_NAME)/react-native-builds/ \
        --source $(System.DefaultWorkingDirectory)/android/app/build/outputs/ \
        --pattern '*.aab'  # Upload .aab files if present
  displayName: 'Upload APK and App Bundle to Azure Blob Storage using Azure CLI'
